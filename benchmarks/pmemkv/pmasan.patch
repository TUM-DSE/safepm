diff --git a/src/libpmemobj/asan_wrappers.c b/src/libpmemobj/asan_wrappers.c
index 998677651..b278ea518 100644
--- a/src/libpmemobj/asan_wrappers.c
+++ b/src/libpmemobj/asan_wrappers.c
@@ -180,9 +180,9 @@ int pmemobj_tx_free(PMEMoid oid) {
 }
 int
 pmemobj_tx_xfree(PMEMoid oid, uint64_t flags) {
-	uint8_t* shadow_object_start = pmdk_asan_get_shadow_mem_location(pmemobj_direct(oid));
-	assert((int8_t)(*shadow_object_start) >= 0 && "Invalid free");
-	assert(*(shadow_object_start-1) == pmdk_asan_LEFT_REDZONE && "Invalid free");
+	//uint8_t* shadow_object_start = pmdk_asan_get_shadow_mem_location(pmemobj_direct(oid));
+	//assert((int8_t)(*shadow_object_start) >= 0 && "Invalid free");
+	//assert(*(shadow_object_start-1) == pmdk_asan_LEFT_REDZONE && "Invalid free");
 	PMEMoid redzone_start={.pool_uuid_lo = oid.pool_uuid_lo, .off = oid.off - pmdk_asan_RED_ZONE_SIZE};
 	int res;
 
@@ -392,4 +392,4 @@ pmemobj_xalloc(PMEMobjpool *pop, PMEMoid *oidp, size_t size,
 //PMEMoid pmemobj_tx_xstrdup(const char *s, uint64_t type_num, uint64_t flags);
 //PMEMoid pmemobj_tx_wcsdup(const wchar_t *s, uint64_t type_num);
 //PMEMoid pmemobj_tx_xwcsdup(const wchar_t *s, uint64_t type_num, uint64_t flags);
-//int pmemobj_strdup(PMEMobjpool *pop, PMEMoid *oidp, const char *s, uint64_t type_num);
\ No newline at end of file
+//int pmemobj_strdup(PMEMobjpool *pop, PMEMoid *oidp, const char *s, uint64_t type_num);
